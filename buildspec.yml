version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.x
    commands:
      - yum update -y
      - yum install -y wget git-lfs ninja-build tar gcc gcc-c++ make
      - pip install pyyaml jinja2
      # Install sccache
      - curl -L https://github.com/mozilla/sccache/releases/download/v0.2.15/sccache-v0.2.15-x86_64-unknown-linux-musl.tar.gz -o sccache.tar.gz
      - tar -xzf sccache.tar.gz
      - mv sccache-v0.2.15-x86_64-unknown-linux-musl/sccache /usr/local/bin/
      - chmod +x /usr/local/bin/sccache
      - rm -rf sccache*
      # Install CMake
      - curl -L https://github.com/Kitware/CMake/releases/download/v3.26.4/cmake-3.26.4-linux-x86_64.tar.gz -o cmake.tar.gz
      - tar -xzf cmake.tar.gz
      - mv cmake-3.26.4-linux-x86_64 /usr/local/cmake
      - ln -s /usr/local/cmake/bin/cmake /usr/local/bin/cmake
      - ln -s /usr/local/cmake/bin/ctest /usr/local/bin/ctest
      - ln -s /usr/local/cmake/bin/cpack /usr/local/bin/cpack
      - ln -s /usr/local/cmake/bin/ccmake /usr/local/bin/ccmake
      
      - yum install -y boost-devel
      
      - wget https://gitlab.com/libeigen/eigen/-/archive/3.3.7/eigen-3.3.7.tar.gz
      - tar -xzvf eigen-3.3.7.tar.gz
      - mkdir eigen-3.3.7/build
      - cd eigen-3.3.7/build
      - cmake .. -DCMAKE_INSTALL_PREFIX=/usr/local/eigen3
      - make -j $(nproc)
      - make install
      - cd ../../
      
  pre_build:
    commands:
      - git lfs install
      - git submodule update --init --recursive
      - sccache --start-server


  build:
    commands:
      - mkdir build
      - export CC="sccache gcc"
      - export CXX="sccache g++"
      - cmake -B build -S . \
        -GNinja \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_CXX_FLAGS=-Werror \
        -DCMAKE_CXX_STANDARD=17 \
        -DCMAKE_INSTALL_PREFIX="${INSTALL_DIR}" \
        -DCMAKE_PREFIX_PATH="/usr/local/eigen3" \
        -DACTS_ENABLE_LOG_FAILURE_THRESHOLD=ON \
        -DACTS_BUILD_EVERYTHING=ON \
        -DACTS_BUILD_ODD=ON \
        -DACTS_BUILD_EXAMPLES_PYTHON_BINDINGS=ON \
        -DACTS_BUILD_EXAMPLES_BINARIES=ON \
        -DACTS_BUILD_EXAMPLES_EDM4HEP=ON \
        -DACTS_FORCE_ASSERTIONS=ON \
        -DACTS_BUILD_ANALYSIS_APPS=ON \
        -DACTS_BUILD_PLUGIN_ONNX=ON \
        -DACTS_BUILD_PLUGIN_ACTSVG=ON
      - cmake --build build
      - sccache -s

  post_build:
    commands:
      - tar czf build.tar.gz -C build --exclude "*.o" --exclude "bin/ActsUnitTest*" --exclude "bin/ActsIntegrationTest*" .

artifacts:
  files:
    - build.tar.gz

cache:
  paths:
    - '/root/.cache'
    - '/root/.sccache'
